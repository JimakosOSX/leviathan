---
- name: Update cache
  ansible.builtin.apt:
    update_cache: true

- name: Set a hostname 
  ansible.builtin.hostname:
    name: "{{ server_fqdn }}"
    use: systemd

- name: Install dependencies
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present

# TODO: Digital Ocean manages the /etc/hosts file. 
#- name: Update hosts file
#  ansible.builtin.lineinfile:
#    path: /etc/hosts
#    insertafter: '^127.0.0.1 localhost$'
#    line: "{{ ansible_ssh_host }} {{ server_fqdn }} {{ server_name }}"

- name: Check certbot certs
  ansible.builtin.include_tasks: certs_check.yml

- name: Stop services for certbot
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
  loop: "{{ services }}"
  when: not le_cert.stat.exists and not le_cert_2.stat.exists

- name: Generate new certificate if one doesn't exist.
  ansible.builtin.command: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ server_www_fqdn }},{{ server_fqdn }}"
  register: certbot_ran
  when: not le_cert.stat.exists and not le_cert_2.stat.exists

- name: Check certbot certs again
  ansible.builtin.include_tasks: certs_check.yml
  when: certbot_ran.changed

- name: Start services
  ansible.builtin.systemd:
    name: "{{ item }}" 
    enabled: true
  loop: "{{ services }}"

- name: Copy script that shows basic info (cli)
  ansible.builtin.copy: 
    src: files/get_info_cli.sh
    dest: /root/get_info_cli.sh
    owner: root
    group: root
    mode: '0755'

- name: Template script that shows info
  ansible.builtin.template: 
    src: get_info.sh.j2
    dest: /root/get_info.sh
    owner: root
    group: root
    mode: '0755'

- name: Run get_info.sh script hourly - Cron Job
  ansible.builtin.cron:
    name: "information script"
    minute: "0"
    job: "/root/get_info.sh {{ www_root }}/info"

- name: Run get_info_cli.sh script hourly - Cron Job
  ansible.builtin.cron:
    name: "information script - cli"
    minute: "0"
    job: "/root/get_info_cli.sh > {{ www_root }}/cli_info"

# Tasks for backup purposes to be included
- name: Restore backup
  ansible.builtin.include_tasks: restore_backup.yml
  when: restore_backup

- name: Create backup
  ansible.builtin.include_tasks: create_backup.yml
  when: create_backup
